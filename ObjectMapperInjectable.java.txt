package app1.utilities.chat;

import com.fasterxml.jackson.databind.ObjectMapper;
import org.atmosphere.cpr.AtmosphereConfig;
import org.atmosphere.inject.Injectable;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.annotation.PostConstruct;
import java.lang.reflect.Type;

/**
 * {@link Injectable} for {@link ObjectMapper}
 */
public class ObjectMapperInjectable implements Injectable<ObjectMapper>
{
    private static final Logger logger = LoggerFactory.getLogger(ObjectMapperInjectable.class);

    private final ObjectMapper mapper = new ObjectMapper();


    @PostConstruct
    public void ObjectMapperInjectablePostConstruct()
    {
        logger.debug("ObjectMapperInjectablePostConstruct() started.");
    }

    @Override
    public boolean supportedType(Type t) {
        return (t instanceof Class) && ObjectMapper.class.equals((Class) t);
    }

    @Override
    public ObjectMapper injectable(AtmosphereConfig config) {
        return mapper;
    }
}